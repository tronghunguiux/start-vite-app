@mixin transform($transform...){
  -webkit-transform: $transform;
  -moz-transform: $transform;
  -ms-transform: $transform;
  -o-transform: $transform;
  transform: $transform;
}


@mixin border-radius($radius...){
  border-radius: $radius;
  -moz-border-radius: $radius;
  -webkit-border-radius: $radius;
  -o-border-radius: $radius;
  -ms-border-radius: $radius;
}

@mixin transition($transition...){
  -moz-transition:    $transition;
  -o-transition:      $transition;
  -ms-transition:     $transition;
  -webkit-transition: $transition;
  transition:         $transition;
}

@mixin transition-property($property...){
  -moz-transition-property:    $property;
  -o-transition-property:      $property;
  -webkit-transition-property: $property;
  transition-property:         $property;
}

@mixin transition-duration($duration...){
  -moz-transition-property:    $duration;
  -o-transition-property:      $duration;
  -webkit-transition-property: $duration;
  transition-property:         $duration;
}

@mixin transition-timing-function($timing...){
  -moz-transition-timing-function:    $timing;
  -o-transition-timing-function:      $timing;
  -webkit-transition-timing-function: $timing;
  transition-timing-function:         $timing;
}

@mixin transition-delay($delay...){
  -moz-transition-delay:    $delay;
  -o-transition-delay:      $delay;
  -webkit-transition-delay: $delay;
  transition-delay:         $delay;
}

@mixin box-shadow($shadow...){
  box-shadow: $shadow;
  -moz-box-shadow: $shadow;
  -webkit-box-shadow: $shadow;
  -o-box-shadow: $shadow;
  -ms-box-shadow: $shadow;
}

@mixin transition-scale($scale...){
  -webkit-transform: scale($scale);
  -moz-transform: scale($scale);
  -ms-transform: scale($scale);
  -o-transform: scale($scale);
  transform: scale($scale);
}

@mixin dotted-line($line, $lineheight, $maxheight: fit-content){
  overflow: hidden;
  text-overflow: ellipsis;
  display: -webkit-box;
  -webkit-box-orient: vertical;
  -webkit-line-clamp: $line;
  line-height: $lineheight;
  word-break: break-word;
  max-height: $maxheight;
}

@mixin quares($size){
  width: $size;
  height: $size;
  object-fit: cover;
}

@mixin icon($x, $y){
  background-position: (-24px * $x) (-24px * $y);
}

@mixin icon-lg($x, $y){
  background-position: (-48px * $x) (-48px * $y);
}

@mixin background($color, $opacity: 1){
  background: rgba( $color, $opacity);
}

// Mixin Typography
@mixin dotted-line($line, $lineheight: null, $maxheight: null){
    overflow: hidden;
    text-overflow: ellipsis;
    display: -webkit-box;
    -webkit-box-orient: vertical;
    -webkit-line-clamp: $line;
    word-break: break-word;
    @if($lineheight!=null){
        line-height: $lineheight;
    }
    @if($maxheight!=null){
        max-height: $maxheight;
    }
}


// Mixin control colors - text
@mixin text-arrays-classes($colors) {
    @each $color-name, $color-map in $colors {
        @each $number, $color-value in $color-map {
            .text-#{$color-name}--#{$color-name}#{$number} {
                color: $color-value;
            }
        }
    }
}
@mixin text-color-class($color-name, $index) {
    @if map-has-key($arr-colors, $color-name) {
      $color-map: map-get($arr-colors, $color-name);
      @if map-has-key($color-map, $index) {
            $color-value: map-get($color-map, $index);
            .text-#{$color-name}--#{$color-name}#{$index}0 {
                color: $color-value;
            }
        }
    }
}

// Mixin control colors - background
@mixin background-arrays-classes($colors) {
    @each $color-name, $color-map in $colors {
        @each $number, $color-value in $color-map {
            .bg-#{$color-name}--#{$color-name}#{$number} {
                background-color: $color-value;
            }
        }
    }
}
@mixin background-color-class($arr-colors, $color-name, $index) {
    @if map-has-key($arr-colors, $color-name) {
      $color-map: map-get($arr-colors, $color-name);
      @if map-has-key($color-map, $index) {
            $color-value: map-get($color-map, $index);
            .bg-#{$color-name}--#{$color-name}#{$index}0 {
                background-color: $color-value;
            }
        }
    }
}